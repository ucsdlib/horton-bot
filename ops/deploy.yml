---
- name: Deploy Bot application with Ansistrano
  hosts: lib-slackbots

  vars_files:
    - vars/bot.yml
    - vars/slack_token.yml

  roles:
    - { role: carlosbuenosvinos.ansistrano-deploy, become: yes }

  pre_tasks:
    - name: Get timestamp for repo
      shell: 'date +%Y%m%d%H%M%S.%5N'
      register: current_run_timestamp
      connection: local
      run_once: true
      changed_when: false

    - name: Set release version
      set_fact: ansistrano_release_version = "{{ current_run_timestamp.stdout }}"

  tasks:
    - name: Permissions and folders
      become: yes
      file:
        path: "{{ item }}"
        recurse: true
        state: directory
        owner: "{{ bot_user }}"
        group: "{{ bot_user }}"
        mode: 0755
      with_items:
        - "{{ ansistrano_deploy_to }}/releases"
        - "{{ ansistrano_deploy_to }}/shared"
        - "{{ ansistrano_deploy_to }}"

    - name: Install Puma config file
      become: yes
      template:
        src: puma.rb.j2
        dest: "{{ ansistrano_deploy_to }}/shared/puma.rb"
        owner: "{{ bot_user }}"
        group: "{{ bot_group }}"
        mode: 0644

    - name: Check if puma service file exists
      stat:
        path: /etc/systemd/system/puma.service
      register: stat_result

    - name: Restarting Puma..
      become: yes
      systemd:
        name: puma
        state: restarted
      when: stat_result.stat.exists == True

    - block:
      - name: Install Puma service files
        become: yes
        template:
          src: "{{ item }}.j2"
          dest: /etc/systemd/system/{{ item }}
          mode: 0755
        with_items:
          - puma.service

      - name: Reload systemd daemon
        become: yes
        systemd:
          daemon_reload: yes

      - name: Enable Puma service
        become: yes
        systemd:
          enabled: yes
          state: started
          name: "{{ item }}"
        with_items:
          - puma.service

      when: stat_result.stat.exists == False

